@using ChemAnalyst.ViewModel
@model List<ChemAnalyst.ViewModel.StackedViewModel>
@{
    var XLabels1 = "";
    var YValues1 = "";
    var label21 = "";
    var ChartTitle = "";
    var fValue = Model.FirstOrDefault().FirstValue;
    var lValue = Model.FirstOrDefault().LastValues;
    var SelectedValues = Model.FirstOrDefault().SelectedValues;

    var selectedLegends = Model.FirstOrDefault().selectedLegends;



    if (SelectedValues == null)
    {
        SelectedValues = "Empty";
    }

    if (selectedLegends == null)
    {
        selectedLegends = "";
    }

    var XLabels = "";
    var YValues = "";
    var label2 = "";
    var Product = "";
    var ChartType = "";
    var range = "";
    var Category = "";

    if (Model.Select(x => x.ProductName).FirstOrDefault() == "No Data")
    {


    }
    else
    {
        XLabels = Newtonsoft.Json.JsonConvert.SerializeObject(Model.FirstOrDefault().LstData.Select(x => x.DimensionOne).ToList());
        YValues = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.LstData.Select(w => w.Quantity)).ToList());
        label2 = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.StackedDimensionOne).ToList());
        Product = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.Product).FirstOrDefault());
        ChartType = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.ChartType).FirstOrDefault());
        range = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.range).FirstOrDefault());
        Category = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.category).FirstOrDefault());
    }


    var fromdate = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.FromDate).FirstOrDefault());
    var todate = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.ToDate).FirstOrDefault());

    ChartTitle = Model.Select(x => x.ProductName).FirstOrDefault() + " " + Model.Select(x => x.range).FirstOrDefault() + " " + "Pricing Analysis ";
}
<!DOCTYPE HTML>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no, shrink-to-fit=no">
    <title>Chem Analyst</title>
    <link href="~/css/oswald-font.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/css/animate.css" type="text/css" />
    <link rel="stylesheet" href="https://maxcdn.icons8.com/fonts/line-awesome/1.1/css/line-awesome-font-awesome.min.css">
    <link rel="shortcut icon" href="images/favicon.ico">
    <!-- Owl Stylesheets -->
    <link rel="stylesheet" href="~/css/owl.carousel.min.css">
    <link rel="stylesheet" href="~/css/owl.theme.default.min.css">
    <link rel="stylesheet" href="~/css/bootstrap-multiselect.css">
    <link rel="stylesheet" href="//cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css">

    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <link rel="stylesheet" href="~/css/custom.css" type="text/css" />
    <style>
        .rangeSlider .slidecontainer {
            width: 100%;
        }

        .rangeSlider {
            margin-left: 30px;
        }

            .rangeSlider .slider {
                -webkit-appearance: none;
                width: 96%;
                height: 10px;
                border-radius: 7px;
                background: #1478e4;
                outline: none;
                opacity: 0.7;
                -webkit-transition: .2s;
                transition: opacity .2s;
            }

                .rangeSlider .slider:hover {
                    opacity: 1;
                }

                .rangeSlider .slider::-webkit-slider-thumb {
                    -webkit-appearance: none;
                    appearance: none;
                    width: 25px;
                    height: 25px;
                    border-radius: 50%;
                    background: #7db11a;
                    cursor: pointer;
                }

                .rangeSlider .slider::-moz-range-thumb {
                    width: 25px;
                    height: 25px;
                    border-radius: 50%;
                    background: #7db11a;
                    cursor: pointer;
                }

        ::placeholder { /* Firefox, Chrome, Opera */
            color: #fff;
        }

        :-ms-input-placeholder { /* Internet Explorer 10-11 */
            color: #fff;
        }

        ::-ms-input-placeholder { /* Microsoft Edge */
            color: #fff;
        }
    </style>

</head>
<body onload="ShowCommentariesByDeafult()">
    <header>
        <div class="container">
            <div class="row">
                <div class="col-md-4"><div class="logo"><a href="/"><img src="~/images/logo.png" alt=""></a></div></div>
                <div class="col-md-8 ml-auto">
                    <div class="top-con-bar">
                        <div class="row justify-content-end">
                            <div class="col-sm-3">
                                <div class="icon"><i class="fa fa-phone"></i></div>
                                <div class="top-bt-txt">
                                    <h4>Telephone</h4>
                                    <p>012078765</p>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="icon"><i class="fa fa-envelope"></i></div>
                                <div class="top-bt-txt">
                                    <h4>Email Address</h4>
                                    <p>info@chemanalyst.com </p>
                                </div>
                            </div>
                            <div class="col-sm-3 pl-0">
                                <div class="icon"><i class="fa fa-map-marker"></i></div>
                                <div class="top-bt-txt">
                                    <h4>Office Address</h4>
                                    <p>B-44 sec-57 noida </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="main-nav">
            <div class="container">
                <nav class="navbar navbar-expand-lg p-0" id="mainNav">
                    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNavDropdown" aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation"><span class="fa fa-bars 2x"></span> Menu</button>
                    <div class="collapse navbar-collapse" id="navbarNavDropdown">
                        <ul class="navbar-nav">
                            <li class="nav-item"><a class="nav-link" href="@Url.Action("MarketAnalysisChart", "MarketAnalysis")">Analysis </a></li>
                            <li class="nav-item active"><a class="nav-link" href="@Url.Action("ChecmPriceChart", "ChemicalPricing")">Chemical Pricing</a></li>
                            <li class="nav-item"><a class="nav-link" href="@Url.Action("IndustryReport", "Industry")">Industry Reports</a></li>
                            <li class="nav-item"><a class="nav-link" href="#">Company Profile</a></li>
                            <li class="nav-item"><a class="nav-link" href="@Url.Action("NewsHome", "NewsAndDeals")">News</a></li>
                            <li class="nav-item"><a class="nav-link" href="@Url.Action("DealsHome", "NewsAndDeals")">Deals</a></li>
                            <li class="nav-item"><a class="nav-link" href="@Url.Action("Contact", "ChemAnalyst")">Contact Us</a></li>
                        </ul>
                    </div>
                    <div class="book-demo-b">
                        <a href="@Url.Action("FreeTrail", "ChemAnalyst")"><i class="fa fa-clock-o"></i> Free Trail</a>
                        <a href="@Url.Action("Index", "Admin")"><i class="fa fa-user"></i> Login</a>
                    </div>
                </nav>
            </div>
        </div>
    </header>
    <div class="inner-banner">
        <img src="images/about-banner.jpg">
        <h1>Chemical Pricing</h1>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="#">Home</a></li>
            <li class="breadcrumb-item active" aria-current="page">Chemical Pricing</li>
        </ol>
    </div>
    <div class="page-content">
        <div class="static-page">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                        <div class="common-desc">
                            <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.</p>
                        </div>
                        <div class="filter-chart-type">
                            @using (Html.BeginForm("ShowChart", "ChemicalPricing", null, FormMethod.Post, new { @id = "ShowChart", enctype = "multipart/form-data" }))
                            {
                                <div class="row">
                                    <div class="col-md-4">
                                        <p><i class="fa fa-bars"></i> Category</p>
                                        @Html.DropDownList("category", new SelectList(ViewBag.ProductList, "Value", "Text"), "Please select category", new { @id = "category", @class = "btn btn-primary width100", required = "required", oninvalid = "this.setCustomValidity('Please select Category')", onchange = "try{setCustomValidity('')}catch(e){}" })
                                    </div>
                                    <div class="col-md-4 pl-0">
                                        <p><i class="fa fa-list"></i> Product</p>
                                        <select class="btn btn-primary width100" id="ddlProduct" name="ddlProduct" required="required" oninvalid="this.setCustomValidity('Please select product')" onchange="try{setCustomValidity('')}catch(e){}"></select>
                                    </div>
                                    <div class="col-md-4 pl-0">
                                        <p><i class="fa fa-random"></i> Range</p>
                                        <select id="ddlRange" name="ddlRange" class="btn btn-primary width100" required="required" oninvalid="this.setCustomValidity('Please select Range')" onchange="try{setdtval();setCustomValidity('')}catch(e){}">
                                            <option value="">Select Range</option>
                                            <option value="Yearly">Yearly</option>
                                            <option value="Monthly">Monthly</option>
                                            <option value="Quarterly">Quarterly</option>
                                            <option value="Weekly">Weekly</option>
                                            <option value="Daily basis">Daily Retail</option>
                                            <option value="Daily Bulk">Daily Bulk</option>
                                        </select>
                                    </div>
                                    <div class="col-md-4  mt10">
                                        <p><i class="fa fa-bar-chart"></i> Chart Types</p>
                                        <select class="btn btn-primary width100" id="ddlChart" name="ddlChart">
                                            <option value="line">Line Chart</option>
                                            <option value="bar">Bar Chart</option>
                                            <option value="pie">Pie Chart</option>
                                        </select>
                                    </div>
                                    <div style="display:@(ViewBag.QYears == null ? "" : "none")" class="col-md-4 dtcol mt10">
                                        <p><i class="fa fa-bar-chart"></i> From Date</p>
                                        <input type="text" class="btn btn-primary width100" placeholder="Select Date" id="fromdate" name="fromdate" autocomplete="off" />
                                    </div>
                                    <div style="display:@(ViewBag.QYears == null ? "" : "none")" class="col-md-4 dtcol mt10">
                                        <p><i class="fa fa-bar-chart"></i> To Date</p>
                                        <input type="text" class="btn btn-primary width100" placeholder="Select Date" id="todate" name="todate" autocomplete="off" />
                                    </div>
                                    <div style="display:@(ViewBag.QYears != null ? "" : "none")" class="col-md-4 yrcol  mt10">
                                        <p><i class="fa fa-bar-chart"></i> Year</p>
                                        <select class="btn btn-primary width100" id="ddlyear" name="ddlyear">
                                            @{
                                                if (ViewBag.QYears != null)
                                                {
                                                    foreach (var item in ViewBag.QYears)
                                                    {
                                                        <option value="@item.Year">@item.Year</option>
                                                    }
                                                }
                                                else
                                                {
                                                    <option value="@DateTime.Now.Year">@DateTime.Now.Year</option>
                                                }
                                            }
                                        </select>
                                    </div>
                                    <div class="col-md-4 mt10" style="display:none">
                                        <p>
                                            <i class="fa fa-compress"></i> Comparision
                                        </p>
                                        <select name="example-getting-started" id="example-getting-started" class="btn btn-primary width100" multiple="multiple"> </select>
                                        <option selected="selected" value="xyz">Xyz</option>
                                        <option selected="selected" value="pqr">Pqr</option>
                                        <option value="lmn">Lmn</option>
                                    </div>
                                    <input type="hidden" id="MaxValue" name="MaxValue" value="" />
                                    <input type="hidden" id="MinValue" name="MinValue" value="" />
                                    <input type="hidden" id="ClearValue" name="ClearValue" value="" />
                                    <input type="hidden" id="hiddenLegends" name="hiddenLegends" value="@selectedLegends" />
                                    <div class="col-md-12 pl-0 mt12" style="margin-left: 15px;">
                                        <button type="submit" onclick="SubmitForm()" class="btn btn-green mt27" id="ViewChart" value="ViewChart" name="submit">
                                            <i class="fa fa-refresh"></i>
                                            View Chart
                                        </button>
                                        <button type="submit" class="btn btn-green mt30" id="submit" value="Reset" name="submit" style="display:none">
                                            <i class="fa fa-refresh"></i>
                                            Reset
                                        </button>

                                        <span id="exportpdf2" style="cursor:pointer; " class="btn btn-green mt30 " onclick="generatePDF()">Export as PDF</span>
                                        <a href="javascript:void(0)" id="exportxls2" onclick="exportToExcel('tblRegisteredUsers', 'Chemical-Pricing.')" class="btn btn-green mt30 ">Export as Excel</a>

                                    </div>
                                </div>
                                                }
                        </div>
                        <div class="filter-checkbox-btn lgndchk" style="display:block; ">
                            @*<ul>*@
                            @foreach (var item in ViewBag.AllLegends)
                            {
                                <label class="checkbox-inline" style="font-size: 12px;font-weight: bold;">
                                    <input type="checkbox" value="@item.Name" @(selectedLegends.Contains(item.Name) ? "checked='checked'" : "") class="chcktbl" onclick="myfunction(this)">@item.Name
                                </label>
                                @*<li><a href="#">@item <i class="fa fa-close"></i></a></li>*@
                            }
                            @*</ul>*@
                        </div>
                        <div id="invoice">
                            <span class="pull-right" style="font-size:12px;margin-right: 2px; font-weight:bold">[Unit = INR/Tonnes]</span>
                            <canvas id="canvas"></canvas>
                            @*<div style="height:20px"></div>*@
                            <div class="rangeSlider col-lg-12" style="margin:0;cursor: pointer; color: #f30404; display:none">
                                <a onclick="SubmitResetForm()" title="Reset" id="submitReset" style="float: right;"><i class="fa fa-refresh"></i></a>
                                <div class="slidecontainer" style="display:none" id="slidecontainer1">
                                    <input type="range" min="" max="" value="" class="slider" id="myRange">
                                    <div style="height:10px"></div>
                                    <p>Value: <span id="demo"></span></p>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div style="height:30px"></div>
                                <div class="common-desc">
                                    <h4 style="border-bottom: 1px solid #ccc">
                                        @Model.FirstOrDefault().CommentaryTitle
                                        @*<a href="#" id="hrefComentery" style="cursor: pointer;font-size: 14px;float: right;" data-toggle="modal" data-target="#Comentery" onclick="ShowCommentaries()"><span>View all</span></a>*@
                                        <a id="viewAll" href="@Url.Action("CommentaryHome", "ChemicalPricing", new { ProductId = Model.Select(x => x.Product).FirstOrDefault() })" style="cursor: pointer;font-size: 14px;float: right;"><span>View all</span></a>
                                    </h4>
                                    <p>


                                        @Html.Raw(WebUtility.HtmlDecode(@Model.FirstOrDefault().CommentaryDescription))
                                    </p>
                                </div>
                                <div style="height:30px"></div>


                                <div class="custom-table">
                                    @if (Model.FirstOrDefault().range.ToLower() == "weekly" || Model.FirstOrDefault().range.ToLower() == "quarterly")
                                    {
                                        <div style="overflow-x:scroll">
                                            <table class="table table-hover table-bordered" id="tblRegisteredUsers">
                                                <thead>
                                                    <tr class="table-primary">
                                                        <th>Product</th>
                                                        @if (Model.FirstOrDefault().range.ToLower() == "weekly")
                                                        {
                                                            // <th></th>
                                                        }
                                                        @foreach (string column in Model.Select(x => x.StackedDimensionOne).ToList())
                                                        {

                                                            <th>@column</th>
                                                        }
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (string column in (Model.FirstOrDefault().LstData.Select(x => x.DimensionOne).ToList()))// Model.Select(x => x.StackedDimensionOne).ToList())
                                                    {
                                                        <tr>
                                                            <td>@column</td>
                                                            @if (Model.FirstOrDefault().range.ToLower() == "weekly")
                                                            {
                                                                //<th>@Model.FirstOrDefault().Discription.ToString()</th>
                                                            }
                                                            @foreach (string x in Model.Select(x => x.StackedDimensionOne).ToList())
                                                            {

                                                                <th>@Model.FirstOrDefault(c => c.StackedDimensionOne == x).LstData.FirstOrDefault(e => e.DimensionOne == column).Quantity </th>
                                                            }
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    }

                                    else if (Model.FirstOrDefault().range.ToLower() == "monthly")
                                    {
                                        string[] months = { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" };
                                        string[] mths = { "Jan", "Feb", "March", "April", "May", "June", "July", "Aug", "Sept", "Oct", "Nov", "Dec" };
                                        <table class="table table-hover table-bordered" id="tblRegisteredUsers">
                                            <thead>
                                                <tr class="table-primary">
                                                    <th>Product</th>
                                                    <th>Year</th>
                                                    @foreach (string column in mths)
                                                    {
                                                        <th>@column</th>
                                                    }
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (string x in Model.Select(x => x.Year).Distinct().ToList())
                                                //foreach (string column in (Model.FirstOrDefault().LstData.Select(x => x.DimensionOne).ToList()))// Model.Select(x => x.StackedDimensionOne).ToList())
                                                {
                                                    foreach (string column in (Model.FirstOrDefault().LstData.Select(z => z.DimensionOne).ToList()))
                                                    // foreach (string x in Model.Select(x => x.Year).Distinct().ToList())
                                                    {
                                                        //comment this condifition to view all year data including 0 total
                                                        if (Model.Where(c => c.StackedDimensionOne.Contains(x)).ToList().Sum(tt => tt.LstData.FirstOrDefault(e => e.DimensionOne == column).Quantity) > 0)
                                                        {

                                                            <tr>
                                                                <td>@column</td>
                                                                <td>@x</td>
                                                                @foreach (string s in months)
                                                                {

                                                                    <td>
                                                                        @if (Model.FirstOrDefault(c => c.StackedDimensionOne == s + " " + x) != null &&
Model.FirstOrDefault(c => c.StackedDimensionOne == s + " " + x).LstData.FirstOrDefault(e => e.DimensionOne == column) != null
)
                                                                        {
                                                                            <span>@Model.FirstOrDefault(c => c.StackedDimensionOne == s + " " + x).LstData.FirstOrDefault(e => e.DimensionOne == column).Quantity</span>
                                                                        }
                                                                        else
                                                                        {
                                                                            <span>0</span>
                                                                        }
                                                                    </td>
                                                                }
                                                            </tr>}
                                                    }
                                                }
                                            </tbody>
                                        </table>
                                    }
                                    else if (Model.FirstOrDefault().range.ToLower() == "daily basis")
                                    {
                                        @*<div style="overflow-y:scroll; height:500px;width: 1200px;z-index: 9999;    position: relative;">*@
                                        @*<div>*@
                                        <div id="divScorll" style="height:500px ;z-index: 9999; position: relative;">
                                            <table class="table table-hover table-bordered dailybasis" id="tblRegisteredUsers">
                                                <thead>
                                                    <tr class="table-primary">
                                                        <th scope="col" style=" width:90px">Product</th>
                                                        <th scope="col" style=" width:90px">Date</th>
                                                        <th scope="col" style=" width:116px">Commodity</th>
                                                        <th scope="col" style=" width:91px">Type</th>
                                                        <th scope="col" style=" width:82px">Terms</th>
                                                        <th scope="col" style=" width:90px">Location</th>
                                                        <th scope="col" style=" width:110px">Price</th>
                                                        <th scope="col" style=" width:110px">Mid Value</th>
                                                        <th scope="col" colspan="2" style=" width:150px">Differnce 4 Weeks Ago</th>
                                                        <th scope="col" style=" width:155px">Contract Details</th>
                                                        @*@foreach (var column in (Model.FirstOrDefault().lstDataTable.ToList()))// Model.Select(x => x.StackedDimensionOne).ToList())
                                                            {

                                                                <th>@column</th>
                                                            }*@
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var column in (Model.FirstOrDefault().lstDataTable.ToList()))
                                                    {
                                                        <tr>
                                                            <td style=" width:90px">@column.FileName</td>
                                                            <td style=" width:90px">@column.Date</td>
                                                            <td style=" width:116px">@column.Commodity</td>
                                                            <td style=" width:91px">@column.Type</td>
                                                            <td style=" width:82px">@column.Term</td>
                                                            <td style=" width:93px">@column.Location</td>
                                                            <td style=" width:110px">@column.Price</td>
                                                            <td style=" width:110px">@column.MidValue</td>
                                                            <td style="width:150px">
                                                                @*<td style=" width:40px">*@
                                                                @{
                                                                    if (column.Difference4WeekAgo.FirstOrDefault().ToString() == "(")
                                                                    {
                                                                        <img src="~/images/down_stock_2.png" style="width: 20px;height: 15px;" />
                                                                        @*<span><i class="fa fa-arrow-circle-down" style="color:red"></i></span>*@
                                                                    }
                                                                    else
                                                                    {
                                                                        <img src="~/images/up_stock_1.png" style="width: 20px;height: 15px;" />
                                                                        @*<span><i class="fa fa-arrow-circle-up" style="color:green"></i></span>*@
                                                                    }
                                                                }
                                                                @column.Difference4WeekAgo
                                                            </td>
                                                            @*<td style="width:110px">@column.Difference4WeekAgo</td>*@
                                                            @*<td>
                                                                    @{
                                                                        if (column.Difference4WeekAgo.FirstOrDefault().ToString() == "(")
                                                                        {

                                                                            @column.Difference4WeekAgo <span><i class="fa fa-arrow-circle-down" style="color:red"></i></span>
                                                                        }
                                                                        else
                                                                        {
                                                                            @column.Difference4WeekAgo <span><i class="fa fa-arrow-circle-up" style="color:green"></i></span>
                                                                        }
                                                                    }
                                                                </td>*@
                                                            <td style=" width:155px">@column.ContractDetails</td>
                                                        </tr>
                                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                                                    }
                                                                    else if (Model.FirstOrDefault().range.ToLower() == "daily bulk")
                                                                    {
                                                                        <table class="table table-hover table-bordered" id="tblRegisteredUsers">
                                                                            <thead>
                                                                                <tr class="table-primary">
                                                                                    <th>Days</th>
                                                                                    @foreach (string column in (Model.FirstOrDefault().LstData.Select(x => x.DimensionOne).ToList()))// Model.Select(x => x.StackedDimensionOne).ToList())
                                                                                    {

                                                                                        <th>@column</th>
                                                                                    }
                                                                                </tr>
                                                                            </thead>
                                                                            <tbody>
                                                                                @foreach (string count in Model.Select(x => x.StackedDimensionOne).ToList())
                                                                                {
                                                                                    <tr>
                                                                                        @foreach (var data in Model.Where(x => x.StackedDimensionOne == count).ToList())

                                                                                        {
                                                                                            <th>@count</th>

                                                                                            foreach (var value in data.LstData.Select(x => x.Quantity).ToList())
                                                                                            {
                                                                                                <th>@value</th>
                                                                                            }

                                                                                        }
                                                                                    </tr>
                                                                                }
                                                                            </tbody>
                                                                        </table>
                                                                    }

                                                                    else
                                                                    {
                                                                        <table class="table table-hover table-bordered" id="tblRegisteredUsers">
                                                                            <thead>
                                                                                <tr class="table-primary">
                                                                                    <th>Year</th>
                                                                                    @foreach (string column in (Model.FirstOrDefault().LstData.Select(x => x.DimensionOne).ToList()))// Model.Select(x => x.StackedDimensionOne).ToList())
                                                                                    {

                                                                                        <th>@column</th>
                                                                                    }
                                                                                </tr>
                                                                            </thead>
                                                                            <tbody>
                                                                                @foreach (string count in Model.Select(x => x.StackedDimensionOne).ToList())
                                                                                {
                                                                                    <tr>
                                                                                        @foreach (var data in Model.Where(x => x.StackedDimensionOne == count).ToList())

                                                                                        {
                                                                                            <th>@count</th>

                                                                                            foreach (var value in data.LstData.Select(x => x.Quantity).ToList())
                                                                                            {
                                                                                                <th>@value</th>
                                                                                            }

                                                                                        }
                                                                                    </tr>
                                                                                }
                                                                            </tbody>
                                                                        </table>
                                                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <aside>
                            <div class="side-news-feed" style="height: 540px;overflow-y: scroll;">
                                <h3><i class="fa fa-bell-o"></i> News</h3>
                                @foreach (var news in Model.Select(x => x.NewsDetailsViewModel.NewsList).FirstOrDefault())
                                {
                                    <div class="news-feed-col">
                                        <a href="@Url.Action("NewsDetails", "NewsAndDeals", new { id = news.GenerateItemNameAsParam() })">
                                            <div class="right-news-desc2">
                                                <p>@(news.NewsDiscription.Length > 60 ? (news.NewsDiscription.Substring(0, 60)) : news.NewsDiscription)</p>
                                                <p><i class="fa fa-clock-o"></i>@news.CreatedTime.ToShortDateString()</p>
                                            </div>
                                        </a>
                                    </div>

                                }
                            </div>
                            <div class="side-news-feed mt-4" style="height: 540px;overflow-y: scroll;">
                                <h3><i class="fa fa-thumbs-up"></i> Top Deals</h3>
                                @foreach (var item in Model.Select(x => x.NewsDetailsViewModel.DealList).FirstOrDefault())
                                {
                                    <div class="news-feed-col">
                                        <a href="@Url.Action("DealsDetails", "NewsAndDeals", new { id = item.GenerateItemNameAsParam() })">
                                            @if (item.DealsImg != string.Empty)
                                            {
                                                <div class="left-news-pic"><img src="/images/@item.DealsImg" alt=""></div>
                                            }
                                            <div class="right-news-desc">
                                                <p>@item.DealsDiscription</p>
                                                <p><i class="fa fa-clock-o"></i>@item.CreatedTime.Value.ToShortDateString()</p>
                                            </div>
                                        </a>
                                    </div>
                                }
                            </div>
                        </aside>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- The Modal -->
    <div class="modal" id="myModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="login-pic">
                                <div class="freeSub">
                                    <h2>Get Chemical Pricing in few-clicks.</h2>
                                    <a href="@Url.Action("FreeTrail", "ChemAnalyst")" class="btn btn-yellow">Start your Free Trail today.</a>
                                    <a href="@Url.Action("FreeTrail", "ChemAnalyst")" class="text-center">Click here to subscribe free trial to enjoy our benefits!</a>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- The Modal -->
    <div class="modal" id="Comentery">
        <div class="modal-dialog modal-dialog-scrollable">
            <div class="modal-content">
                <!-- Modal Header -->
                <div class="modal-header">
                    <h1 class="modal-title">Commentaries </h1>
                    <button type="button" class="close" data-dismiss="modal">×</button>
                </div>
                <!-- Modal body -->
                <div class="modal-body" id="Commentaries">
                </div>

                <!-- Modal footer -->
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>


    <footer>
        <div class="container-fluid">
            <div class="footer-bottom">
                <div class="row">
                    <div class="col-lg-4">
                        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s.</p>
                        <div class="footer-social">
                            <a href="#"><i class="fa fa-facebook"></i></a>
                            <a href="#"><i class="fa fa-twitter"></i></a>
                            <a href="#"><i class="fa fa-instagram" aria-hidden="true"></i></a>
                            <a href="#"><i class="fa fa-linkedin"></i></a>
                        </div>
                    </div>
                    <div class="col-lg-2">
                        <h3>Useful links</h3>
                        <div class="foot-links">
                            <p><a href="#">About Us</a></p>
                            <p><a href="#">Privacy Policy</a></p>
                            <p><a href="#">FAQs</a></p>
                        </div>
                    </div>
                    <div class="col-lg-2">
                        <h3>Our Services</h3>
                        <div class="foot-links">
                            <p><a href="#">About Us</a></p>
                            <p><a href="#">Privacy Policy</a></p>
                            <p><a href="#">FAQs</a></p>
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <h3>Recent News & Deals</h3>
                        <div class="foot-links">
                            <p>
                                <a href="#">
                                    Test with Nursing Implications
                                    <br>August 8, 2018
                                </a>
                            </p>
                            <p>
                                <a href="#">
                                    Test with Nursing Implications
                                    <br>August 8, 2018
                                </a>
                            </p>
                        </div>
                    </div>
                </div>
                <div class="copyright text-center">
                    <p>Copyright 2019. Chem Analyst. All Rights Reservered. </p>
                </div>
            </div>
        </div>
    </footer>
    <style>
        #divScorll thead, tfoot {
            background: #f9f9f9;
            display: table;
            width: 100%;
            width: calc(100% - 18px);
        }

        #divScorll tbody {
            height: 400px;
            overflow: auto;
            overflow-x: hidden;
            display: block;
            width: 100%;
        }

            #divScorll tbody tr {
                display: table;
                width: 100%;
                table-layout: fixed;
            }
    </style>
    <script>



        function myfunction(id) {
            var $checkedagreeChecker = $('.chcktbl:checked');
            var joinedValues = $checkedagreeChecker.map(function(){return this.value}).get().join(",");

            $('input[name="hiddenLegends"]').val($checkedagreeChecker.length > 0 ? joinedValues : "" )

            $("#submit").trigger("click");
        }



        function SubmitResetForm()
        {
            $("#submit").trigger("click");
        }

    </script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.0/jquery.min.js"></script>
    @*<script src="//ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js"></script>*@
    <script src="../js/popper.min.js"></script>
    <script src="../js/bootstrap.min.js"></script>
    <script src="../js/bootstrap-multiselect.js"></script>
    <script src="../js/owl.carousel.js"></script>
    <script src="../js/wow.min.js"></script>
    <script src="../js/honey-custom.js"></script>
    <script src="../js/Chart.min.js"></script>
    <script src="../js/utils.js"></script>
    <link rel="stylesheet" type="text/css" href="~/css/jquery.datetimepicker.css">
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="//cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="jquery.js"></script>
    <script src="~/js/jquery.datetimepicker.full.min.js"></script>
    <script src="~/js/html2pdf.bundle.min.js"></script>
    <script type="text/javascript" src="https://oss.sheetjs.com/js-xlsx/xlsx.core.min.js"></script>
    <script type="text/javascript" src="https://oss.sheetjs.com/js-xlsx/ods.min.js"></script>
    <script type="text/javascript" src="https://sheetjs.com/demos/Export2Excel.js"></script>
    <script src="https://igniteui.com/js/external/FileSaver.js"></script>
    <script src="https://igniteui.com/js/external/Blob.js"></script>
    <script src="https://www.github.developerdan.com/table-to-json/javascripts/jquery.tabletojson.min.js"></script>

    <script defer src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.0/sweetalert.min.js"></script>
    <script type="text/javascript">

        $(function () {
            $("#todate").attr("disabled","disabled");
            jQuery('#fromdate').datepicker({
                changeMonth: true,
                changeYear: true ,
                onSelect: function (selected) {
                    var diff = 30;
                    if($("#ddlRange").val() == "Yearly" ){
                        diff = (365*500);
                    }
                    if( $("#ddlRange").val() == "Monthly"){
                        diff = (365*3);
                    }
                    if($("#ddlRange").val() == "Quarterly" ){
                        diff = (365);
                    }
                    if($("#ddlRange").val() == "Weekly" || $("#ddlRange").val() == "Daily basis" || $("#ddlRange").val() == "Daily Bulk"){
                        diff = (29);
                    }
                    var dt = new Date(selected);
                    dt.setDate(dt.getDate() + diff);
                    $("#todate").removeAttr("disabled");
                    $("#todate").datepicker("option", "maxDate", dt);

                    $("#todate").datepicker("option", "minDate", new Date(selected));
                }
            });
            jQuery('#todate').datepicker({
                changeMonth: true,
                changeYear: true ,
                onSelect: function (selected) {

                    debugger;
                    var diff = 30;
                    if($("#ddlRange").val() == "Yearly"){
                        diff = (365*500);
                    }
                    if( $("#ddlRange").val() == "Monthly"){
                        diff = (365*3);
                    }
                    if($("#ddlRange").val() == "Quarterly"){
                        diff = (365);
                    }
                    if($("#ddlRange").val() == "Weekly" || $("#ddlRange").val() == "Daily basis" || $("#ddlRange").val() == "Daily Bulk"){
                        diff = (29);
                    }

                    var dt = new Date(selected);
                    dt.setDate(dt.getDate() - diff);
                    if($("#ddlRange").val() != "Yearly"){
                        var dtt = $('#fromdate').datepicker('getDate');

                        var dt = new Date(dtt);
                        dt.setDate(dt.getDate() + diff);

                        $("#todate").datepicker("option", "maxDate", dt);
                        $("#todate").datepicker("option", "minDate", new Date(dtt));
                    }
                }
            });

        });
        function resetdates(){

            var diff = 30;
            if($("#ddlRange").val() == "Yearly" ){
                diff = (365*500);
            }
            if( $("#ddlRange").val() == "Monthly"){
                diff = (365*3);
            }
            if($("#ddlRange").val() == "Quarterly"){
                diff = (365);
            }
            if($("#ddlRange").val() == "Weekly" || $("#ddlRange").val() == "Daily basis" || $("#ddlRange").val() == "Daily Bulk"){
                diff = (29);
            }

            var dt = new Date();
            // $('#todate').datepicker('setDate', dt);
            dt.setDate(dt.getDate() - diff);
            if($("#ddlRange").val() != "Yearly" ){

                if( $("#ddlRange").val() == "Monthly"){
                    var d = new Date();

                    $('#fromdate').datepicker('setDate', new Date(d.getFullYear(),d.getMonth(),01));
                    $('#todate').datepicker('setDate', 'today');
                }else{
                    $('#fromdate').datepicker('setDate', dt);
                    $('#todate').datepicker('setDate', 'today');
                }
            }else{
                $('#fromdate').val('');
                $('#todate').val('');
            }
        }

        function exportToExcel(tableId, tableName) {
            //showloader();

            setTimeout(function () { export_table_to_excel(tableId, 'xlsx' || 'xlsx', tableName); }, 100);


        }

        function export_table_to_excel(id, type, fn) {


            var table ;
            if (id == 'tbllince') {
                $("#exportResult").show();
                // tbllince
                table = $('#tbllince').tableToJSON();
                $("#exportResult").hide();
            }
            else {
                table = $('#tblRegisteredUsers').tableToJSON();
            }
            //var data = JSON.stringify(table);
            var data = JSON.parse(JSON.stringify(table));

            //console.log(data)
            // setTimeout(function () {  }, 5000);
            var ws = XLSX.utils.json_to_sheet(data);

            /* add to workbook */
            var wb = XLSX.utils.book_new();
            XLSX.utils.book_append_sheet(wb, ws, "tbl");

            /* generate an XLSX file */
            XLSX.writeFile(wb, fn+type);
            //setTimeout(function () { hideloader(); }, 100);
        }


    </script>
    <script>
        $(document).ready(function () {


            var range = $(ddlRange).find("option:selected").val();
            var ddlCustomers = $("#ddlChart");

            if (range == "Daily basis" || range == "Daily Bulk") {
                ddlCustomers.empty().append('<option selected="selected" value="line" >Line Chart</option>');
            }
            else if(range == "Quarterly")
            {
                ddlCustomers.empty().append('<option selected="selected" value="bar" >Bar Chart</option>');
            }
            else if(range == "Monthly")
            {
                ddlCustomers.empty().append('<option selected="selected" value="line" >Line Chart</option><option value="bar" >Bar Chart</option>');
            }
            else if(range == "Weekly")
            {
                ddlCustomers.empty().append('<option selected="selected" value="line" >Line Chart</option><option value="bar" >Bar Chart</option>');
            }
            else {
                ddlCustomers.empty().append('<option selected="selected" value="line" >Line Chart</option><option value="bar" >Bar Chart</option> <option  value="pie" >Pie Chart</option>');
            }

            ShowCommentariesByDeafult()
        });

        $("body").on("change", "#ddlRange", function () {
            var range=$(ddlRange).find("option:selected").val();
            var ddlCustomers = $("#ddlChart");


            if (range == "Daily basis" || range == "Daily Bulk") {
                swal("Please select only 30 days to see daily basis data!")
                //alert("Please select only 30 days to see daily basis data.");
                ddlCustomers.empty().append('<option selected="selected" value="line" >Line Chart</option>');
            }
            else if(range == "Quarterly")
            {
                ddlCustomers.empty().append('<option selected="selected" value="bar" >Bar Chart</option>');
            }
            else if(range == "Monthly")
            {
                ddlCustomers.empty().append('<option selected="selected" value="line" >Line Chart</option><option value="bar" >Bar Chart</option>');
            }
            else if(range == "Weekly")
            {
                ddlCustomers.empty().append('<option selected="selected" value="line" >Line Chart</option><option value="bar" >Bar Chart</option>');
            }
            else {
                ddlCustomers.empty().append('<option selected="selected" value="line" >Line Chart</option><option value="bar" >Bar Chart</option> <option  value="pie" >Pie Chart</option>');
            }
        });

        function ShowCommentaries()
        {

            var  ProductId = $('#ddlProduct').val();
            $.ajax({
                type: "POST",
                url: "../ChemicalPricing/GetCommentaries",
                data: "{ ProductId:"+ ProductId +"}" ,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                success: function (response) {
                    $("#Commentaries").html('');
                    $.each(response, function () {

                        //ddlCustomers.append($("<option></option>").val(this['Value']).html(this['Text']));
                        $("#Commentaries").append($("<h3 style='font-size:20px !important; font-weight: bold;'> "+this.Text+" </h3>")).append($("<p style='font-size:14px !important'> "+this.Value+" </p>"));
                    });

                    $("#Comentery").show()

                },
                failure: function (response) {
                    // alert(response.responseText);
                },
                error: function (response) {
                    // alert(response.responseText);
                }
            });
        }

        function ShowCommentariesByDeafult()
        {
            //
            var  ProductId = 'None';
            $.ajax({
                type: "POST",
                url: "../ChemicalPricing/GetCommentaries/ProductId?=None",
                //data: "{ ProductId: "+ ProductId +"}" ,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                success: function (response) {
                    $("#Commentaries").html('');
                    $.each(response, function () {

                        //ddlCustomers.append($("<option></option>").val(this['Value']).html(this['Text']));
                        $("#Commentaries").append($("<h3 style='font-size:20px !important; font-weight: bold;'> "+this.Text+" </h3>")).append($("<p style='font-size:14px !important'> "+this.Value+" </p>"));
                    });



                },
                failure: function (response) {
                    // alert(response.responseText);
                },
                error: function (response) {
                    // alert(response.responseText);
                }
            });
        }



    </script>
    <script>
        function SubmitForm() {
            $("#todate").removeAttr("disabled");
            var Product = @Html.Raw(Product);
            var ChartType = @Html.Raw(ChartType);
            var range = @Html.Raw(range);
            var Category = @Html.Raw(Category);


            //  $('#ddlProduct').val();
            if ( $('#ddlProduct').val()!=Product && $('#ddlProduct').val()!='')// Calling validation function
            {
                $('#myModal').modal({backdrop: 'static', keyboard: false});
                event.preventDefault();
            }

        }


        function ResetForm()
        {
            var Product = @Html.Raw(Product);
            var ChartType = @Html.Raw(ChartType);
            var range = @Html.Raw(range);
            var Category = @Html.Raw(Category);

            $('#ClearValue').val('ClearMaxValue');

            //  $('#ddlProduct').val();
            if ( $('#ddlProduct').val()!=Product && $('#ddlProduct').val()!='')// Calling validation function
            {
                $('#myModal').modal({backdrop: 'static', keyboard: false});
                event.preventDefault();
            }

        }
        $("body").on("change", "#category", function () {
            var CatId=$(category).find("option:selected").val();

            var ddlCustomers = $("#ddlProduct");
            //  var ddlCompare = $("#example-getting-started");
            // example-getting-started
            ddlCustomers.empty().append('<option selected="selected" value="" disabled = "disabled">Loading.....</option>');
            $.ajax({
                type: "POST",
                url: "../ChemicalPricing/GetProductName",
                data: "{ CatId:"+ CatId +"}" ,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                success: function (response) {
                    ddlCustomers.empty().append('<option selected="selected" value=""> select Product</option>');
                    //ddlCompare.empty().append('<option selected="selected" value="0"> select Product</option>');

                    $.each(response, function () {
                        ddlCustomers.append($("<option></option>").val(this['Value']).html(this['Text']));
                        // ddlCompare.append($("<option  ></option>").val(this['Value']).html(this['Text']));

                    });
                    $("#example-getting-started").multiselect();
                    // alert("category call");
                },
                failure: function (response) {
                    // alert(response.responseText);
                },
                error: function (response) {
                    // alert(response.responseText);
                }
            });
        });









        function Drowchart(id, d) {
            var XLabels = @Html.Raw(XLabels);
            var YValues = @Html.Raw(YValues);
            var label = @Html.Raw(label2);

            var firstValue = label[0];
            var lasttValue = label[label.length-1];
            $("#myRange").attr("min", @fValue);
            $("#myRange").attr("max", @lValue);

            var selected= '@Html.Raw(SelectedValues.ToString())';
            if (selected != "Empty") {
                if ('@fValue'==selected) {
                    $("#myRange").attr("value", firstValue);
                }
                else {
                    $("#myRange").attr("value", '@SelectedValues');
                }
            }
            else {
                $("#myRange").attr("value", firstValue);
            }



            var output = document.getElementById("demo");
            output.innerHTML = firstValue;

            var aux = 0;
            var barChartData = {
                labels: @Html.Raw(label2),
                datasets: []
            }
            XLabels.forEach(function(a, i) {
                var data = [];
                YValues.forEach(function(a, i) {
                    data.push(a[aux]);
                });
                barChartData.datasets.push({
                    label: XLabels[aux],
                    fill: false,
                    backgroundColor: random_rgba(),
                    borderColor: Bcolor,
                    data: data
                });
                aux++;
            });

            var  options= {
                responsive: true,
                title: {
                    display: true,
                    //text: 'Chemical Analysis Chart'
                    text: '@Html.Raw(ChartTitle)'
                },
                tooltips: {
                    mode: 'index',
                    intersect: false,
                },

                scales: {
                    xAxes: [{
                        display: true,
                        scaleLabel: {
                            display: false,
                            labelString: 'Month'
                        }
                    }],
                    yAxes: [{
                        display: true,
                        scaleLabel: {
                            display: false,
                            labelString: 'Value'
                        },
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        }
                    }]
                }
            }
            var Bcolor;
            function random_rgba() {

                var letters = '0123456789ABCDEF';
                var color = '#';
                for (var i = 0; i < 6; i++) {
                    color += letters[Math.floor(Math.random() * 16)];
                }
                Bcolor=color;
                debugger;
                return color;
                //var o = Math.round,
                //    r = Math.random,
                //    s = 100;
                //return 'rgba(' + o(r() * s) + ',' + o(r() * s) + ',' + o(r() * s) + ',' + r().toFixed(1) + ')';
            }

            var ctx = document.getElementById(id).getContext('2d');
            window.myLine =  new Chart(ctx, {      options: options,
                data: barChartData,
                type: d
            });
            // window.myLine = new Chart(ctx, config);
        }


        window.onload = function () {
            var Product = @Html.Raw(Product);
            var ChartType = @Html.Raw(ChartType);
            var range = @Html.Raw(range);
            var from = @Html.Raw(fromdate);
            var to = @Html.Raw(todate);
            var Category = @Html.Raw(Category);

            $('#category').val(Category).trigger('change');;

            $('#ddlProduct').val(Product);
            $('#ddlChart').val(ChartType);
            $('#ddlRange').val(range);

            $('#fromdate').val(from);
            $('#todate').val(to);
            $('#ddlChart').val(ChartType);
            Drowchart('canvas', ChartType);
            var  cyear ='@(ViewBag.CYear==null?"": ViewBag.CYear)'

            if(cyear!= "") {
                $("#ddlyear").val(cyear)
            }

            //Drowchart('canvas2','bar');
            var selected = $("#ddlRange option:selected").text();

            if (selected == "Yearly" ) {
                $("#slidecontainer1").show()
            }
            else
            {
                $("#slidecontainer1").hide()
            }
        };


        document.getElementById('drowchart').addEventListener('change', function () {
            var d = document.getElementById('drowchart').value;
            //alert(d);

            Drowchart('canvas', d);
        });



        document.getElementById('randomizeData').addEventListener('click', function () {
            config.data.datasets.forEach(function (dataset) {
                dataset.data = dataset.data.map(function () {
                    return randomScalingFactor();
                });

            });

            window.myLine.update();
        });

        var colorNames = Object.keys(window.chartColors);
        document.getElementById('addDataset').addEventListener('click', function () {

            var colorName = colorNames[config.data.datasets.length % colorNames.length];
            var newColor = window.chartColors[colorName];
            var newDataset = {
                label: 'Dataset ' + config.data.datasets.length,
                backgroundColor: newColor,
                borderColor: newColor,
                data: [],
                fill: false
            };

            for (var index = 0; index < config.data.labels.length; ++index) {
                newDataset.data.push(randomScalingFactor());
            }

            config.data.datasets.push(newDataset);
            window.myLine.update();
        });

        document.getElementById('addData').addEventListener('click', function () {
            if (config.data.datasets.length > 0) {
                var month = MONTHS[config.data.labels.length % MONTHS.length];
                config.data.labels.push(month);

                config.data.datasets.forEach(function (dataset) {
                    dataset.data.push(randomScalingFactor());
                });

                window.myLine.update();
            }
        });

        document.getElementById('removeDataset').addEventListener('click', function () {
            config.data.datasets.splice(0, 1);
            window.myLine.update();
        });

        document.getElementById('removeData').addEventListener('click', function () {
            config.data.labels.splice(-1, 1); // remove the label first

            config.data.datasets.forEach(function (dataset) {
                dataset.data.pop();
            });

            window.myLine.update();
        });


        function setdtval(){
            $(".lgndchk").hide();
            $('input[name="hiddenLegends"]').val("");
            if($("#ddlRange").val() =="Quarterly"  || $("#ddlRange").val()   ==  "Weekly"){
                $(".dtcol").hide();
                $(".yrcol").show();
            }else{
                $(".dtcol").show();
                $(".yrcol").hide();
                resetdates()
            }

            if($("#ddlRange").val() =="Quarterly"){


            }
        }

        $(document).ready(function () {

            //if("#ddlRange option:selected").text()=="Yearly") {
            //    $("#slidecontainer").show();
            //}



            $("#ShowChart").validate({
                debug: true,
                rules: {
                    ddlProduct: {
                        required: function () {
                            if ($("#ddlProduct option[value='0']")) {
                                return true;
                            } else {
                                return false;
                            }
                        }
                    },
                    ddlChart: {
                        required: function () {
                            if ($("#ddlChart option[value='0']")) {
                                return true;
                            } else {
                                return false;
                            }
                        }
                    }, ddlRange: {
                        required: function () {
                            if ($("#ddlRange option[value='0']")) {
                                return true;
                            } else {
                                return false;
                            }
                        }
                    }
                },
                messages: {
                    ddlRange: "range Required",
                },
            });


        })


        //  $('#ddlRange').on('change', function() {
        //alert( this.value );
        //  });

    </script>
    <script>
        var slider = document.getElementById("myRange");
        var output = document.getElementById("demo");
        output.innerHTML = slider.value;


        document.getElementById("myRange").onmousedown = function () { mouseDown() };
        document.getElementById("myRange").onmouseup = function () { mouseUp() };

        function mouseDown() {
            //document.getElementById("demo").innerHTML = "The mouse button is held down.";
        }

        function mouseUp() {
            output.innerHTML = slider.value;
            //alert(slider.value)

            $("#MinValue").val($("#myRange").attr("min"));
            $("#MaxValue").val(slider.value);

            $(".mt27").trigger("click");

        }
    </script>
    <script>
        //$(document).ready( function () {
        //    $('.dailybasis').DataTable();
        //} );

        //function generatePDF() {
        //  // Choose the element that our invoice is rendered in.
        //  const element = document.getElementById("invoice");
        //  // Choose the element and save the PDF for our user.
        //  html2pdf().from(element).save();
        //}

        function generatePDF() {
            //// Choose the element that our invoice is rendered in.
            //const element = document.getElementById("invoice");
            //// Choose the element and save the PDF for our user.
            //html2pdf()
            //  .set({ html2canvas: { scale: 4, orientation: 'landscap' } })
            //  .from(element)
            //  .save();


            var element = document.getElementById('invoice');

            // Choose pagebreak options based on mode.
            var mode = "avoid-all";
            var pagebreak = (mode === 'specify') ?
            { mode: '', before: '.before', after: '.after', avoid: '.avoid' } :
            { mode: mode };

            $("#exportxls2").hide();
            $("#hrefComentery").hide();
            $("#slidecontainer1").hide();
            $("#submitReset").hide();
            $("#exportpdf2").hide();
            $("#viewAll").hide();


            // Generate the PDF.
            html2pdf().from(element).set({
                filename: "Chemical-Pricing-Export" + '.pdf',
                pagebreak: pagebreak,
                jsPDF: {orientation: 'landscape', unit: 'in', format: 'letter', compressPDF: true}
            }).save().then(function(pdf) {
                //This logs the right base64
                $("#hrefComentery").show();
                $("#exportxls2").show();
                $("#slidecontainer1").show();
                $("#submitReset").show();
                $("#exportpdf2").show();
                $("#viewAll").show();


                // window.location.reload();
            });;



        }
    </script>

</html>