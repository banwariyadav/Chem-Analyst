@using ChemAnalyst.ViewModel
@model List<ChemAnalyst.ViewModel.StackedViewModel>







@{
    var XLabels1 = "";
    var YValues1 = "";
    var label21 = "";
    var fValue = Model.FirstOrDefault().FirstValue;
    var lValue = Model.FirstOrDefault().LastValues;
    var SelectedValues = Model.FirstOrDefault().SelectedValues;

    if (SelectedValues == null)
    {
        SelectedValues = "Empty";

    }

    var XLabels = Newtonsoft.Json.JsonConvert.SerializeObject(Model.FirstOrDefault().LstData.Select(x => x.DimensionOne).ToList());
    var YValues = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.LstData.Select(w => w.Quantity)).ToList());
    var label2 = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.StackedDimensionOne).ToList());
    var Product = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.Product).FirstOrDefault());
    var ChartType = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.ChartType).FirstOrDefault());
    var range = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.range).FirstOrDefault());
    var Category = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.category).FirstOrDefault());
}

<!DOCTYPE HTML>
<html lang="en">
<head>
    <meta charset="utf-8">

    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no, shrink-to-fit=no">

    <title>Chem Analyst</title>

    <link href="~/css/oswald-font.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/css/animate.css" type="text/css" />
    <link rel="stylesheet" href="https://maxcdn.icons8.com/fonts/line-awesome/1.1/css/line-awesome-font-awesome.min.css">
    <link rel="shortcut icon" href="images/favicon.ico">
    <!-- Owl Stylesheets -->
    <link rel="stylesheet" href="~/css/owl.carousel.min.css">
    <link rel="stylesheet" href="~/css/owl.theme.default.min.css">
    <link rel="stylesheet" href="~/css/bootstrap-multiselect.css">


    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->

    <link rel="stylesheet" href="~/css/custom.css" type="text/css" />
    <style>
        .rangeSlider .slidecontainer {
            width: 100%;
        }

        .rangeSlider {
            margin-left: 30px;
        }

            .rangeSlider .slider {
                -webkit-appearance: none;
                width: 96%;
                height: 10px;
                border-radius: 7px;
                background: #1478e4;
                outline: none;
                opacity: 0.7;
                -webkit-transition: .2s;
                transition: opacity .2s;
            }

                .rangeSlider .slider:hover {
                    opacity: 1;
                }

                .rangeSlider .slider::-webkit-slider-thumb {
                    -webkit-appearance: none;
                    appearance: none;
                    width: 25px;
                    height: 25px;
                    border-radius: 50%;
                    background: #7db11a;
                    cursor: pointer;
                }

                .rangeSlider .slider::-moz-range-thumb {
                    width: 25px;
                    height: 25px;
                    border-radius: 50%;
                    background: #7db11a;
                    cursor: pointer;
                }
    </style>
</head>

<body>

    <header>

        <div class="container">
            <div class="row">

                <div class="col-md-4"><div class="logo"><a href="/"><img src="~/images/logo.png" alt=""></a></div></div>
                <div class="col-md-8 ml-auto">
                    <div class="top-con-bar">
                        <div class="row justify-content-end">

                            <div class="col-sm-3">
                                <div class="icon"><i class="fa fa-phone"></i></div>
                                <div class="top-bt-txt">
                                    <h4>Telephone</h4>
                                    <p>012078765</p>
                                </div>
                            </div>

                            <div class="col-sm-4">
                                <div class="icon"><i class="fa fa-envelope"></i></div>
                                <div class="top-bt-txt">
                                    <h4>Email Address</h4>
                                    <p>info@chemanalyst.com </p>
                                </div>
                            </div>

                            <div class="col-sm-3 pl-0">
                                <div class="icon"><i class="fa fa-map-marker"></i></div>
                                <div class="top-bt-txt">
                                    <h4>Office Address</h4>
                                    <p>B-44 sec-57 noida </p>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>


            </div>
        </div>

        <div class="main-nav">
            <div class="container">
                <nav class="navbar navbar-expand-lg p-0" id="mainNav">
                    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNavDropdown" aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation"><span class="fa fa-bars 2x"></span> Menu</button>
                    <div class="collapse navbar-collapse" id="navbarNavDropdown">
                        <ul class="navbar-nav">
                            <li class="nav-item"><a class="nav-link" href="@Url.Action("MarketAnalysisChart", "MarketAnalysis")">Analysis </a></li>
                            <li class="nav-item active"><a class="nav-link" href="@Url.Action("ChecmPriceChart", "ChemicalPricing")">Chemical Pricing</a></li>
                            <li class="nav-item"><a class="nav-link" href="@Url.Action("IndustryReport", "Industry")">Industry Reports</a></li>
                            <li class="nav-item"><a class="nav-link" href="#">Company Profile</a></li>
                            <li class="nav-item"><a class="nav-link" href="@Url.Action("NewsHome", "NewsAndDeals")">News</a></li>
                            <li class="nav-item"><a class="nav-link" href="@Url.Action("DealsHome", "NewsAndDeals")">Deals</a></li>
                            <li class="nav-item"><a class="nav-link" href="@Url.Action("Contact", "ChemAnalyst")">Contact Us</a></li>
                        </ul>
                    </div>
                    <div class="book-demo-b">
                        <a href="@Url.Action("FreeTrail", "ChemAnalyst")"><i class="fa fa-clock-o"></i> Free Trail</a>
                        <a href="@Url.Action("Index", "Admin")"><i class="fa fa-user"></i> Login</a>
                    </div>
                </nav>
            </div>
        </div>

    </header>

    <div class="inner-banner">
        <img src="images/about-banner.jpg">
        <h1>Chemical Pricing</h1>

        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="#">Home</a></li>
            <li class="breadcrumb-item active" aria-current="page">Chemical Pricing</li>
        </ol>

    </div>


    <div class="page-content">
        <div class="static-page">
            <div class="container">

                <div class="row">

                    <div class="col-md-9">

                        <div class="common-desc">
                            <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.</p>
                        </div>

                        <div class="filter-chart-type">
                            @using (Html.BeginForm("ShowChart", "ChemicalPricing", null, FormMethod.Post, new { @id = "ShowChart", enctype = "multipart/form-data" }))
                            {
                                <div class="row">
                                    <div class="col-md-4">
                                        <p><i class="fa fa-bars"></i> Category</p>
                                        @Html.DropDownList("category", new SelectList(ViewBag.ProductList, "Value", "Text"), "Please select category", new { @id = "category", @class = "btn btn-primary width100", required = "required", oninvalid = "this.setCustomValidity('Please select Category')", onchange = "try{setCustomValidity('')}catch(e){}" })


                                    </div>
                                    <div class="col-md-4 pl-0">
                                        <p><i class="fa fa-list"></i> Product</p>
                                        <select class="btn btn-primary width100" id="ddlProduct" name="ddlProduct" required="required" oninvalid="this.setCustomValidity('Please select product')" onchange="try{setCustomValidity('')}catch(e){}"></select>
                                    </div>

                                    <div class="col-md-4 pl-0">
                                        <p><i class="fa fa-random"></i> Range</p>
                                        <select id="ddlRange" name="ddlRange" class="btn btn-primary width100" required="required" oninvalid="this.setCustomValidity('Please select Range')" onchange="try{setCustomValidity('')}catch(e){}">
                                            <option value="">Select Range</option>
                                            <option value="Yearly">Yearly</option>
                                            <option value="Monthly">Monthly</option>
                                            <option value="Quarterly">Quarterly</option>
                                            <option value="Daily basis">Daily basis</option>
                                            <option value="Daily Bulk">Daily Bulk</option>
                                        </select>

                                    </div>

                                    <div class="col-md-4  mt10">
                                        <p><i class="fa fa-bar-chart"></i> Chart Types</p>
                                        <select class="btn btn-primary width100" id="ddlChart" name="ddlChart">
                                            <option value="line">Line Chart</option>
                                            <option value="bar">Bar Chart</option>
                                            <option value="pie">Pie Chart</option>
                                        </select>
                                    </div>
                                    <div class="col-md-4 mt10" style="display:none">
                                        <p>
                                            <i class="fa fa-compress"></i> Comparision
                                        </p>
                                        <select name="example-getting-started" id="example-getting-started" class="btn btn-primary width100" multiple="multiple"> </select>
                                        <option selected="selected" value="xyz">Xyz</option>
                                        <option selected="selected" value="pqr">Pqr</option>
                                        <option value="lmn">Lmn</option>


                                    </div>

                                    <input type="hidden" id="MaxValue" name="MaxValue" value="" />
                                    <input type="hidden" id="MinValue" name="MinValue" value="" />

                                    <input type="hidden" id="ClearValue" name="ClearValue" value="" />

                                    <div class="col-md-4 pl-0 mt10">
                                        <button type="submit" onclick="SubmitForm()" class="btn btn-green mt27" id="ViewChart" value="ViewChart" name="submit">
                                            <i class="fa fa-refresh"></i>
                                            View Chart
                                        </button>

                                        <button type="submit" class="btn btn-green mt30" id="submit" value="Reset" name="submit">
                                            <i class="fa fa-refresh"></i>
                                            Reset
                                        </button>
                                    </div>
                                </div>
                            }
                        </div>

                        <div class="filter-checkbox-btn" style="display:none">


                            <ul>
                                @foreach (string item in (Model.FirstOrDefault().LstData.Select(x => x.DimensionOne).ToList()))
                                {
                                    <li><a href="#">@item <i class="fa fa-close"></i></a></li>
                                }
                            </ul>

                        </div>

                        <canvas id="canvas"></canvas>
                        <div style="height:20px"></div>
                        <div class="rangeSlider col-lg-12">
                            <div class="slidecontainer" style="display:none" id="slidecontainer1">
                                <input type="range" min="" max="" value="" class="slider" id="myRange">
                                <div style="height:10px"></div>
                                <p>Value: <span id="demo"></span></p>
                            </div>
                        </div>


                    </div>


                    <div class="col-md-3">

                        <aside>


                            <div class="side-news-feed">

                                <h3><i class="fa fa-bell-o"></i> News</h3>
                                @foreach (var news in Model.Select(x => x.NewsDetailsViewModel.NewsList).FirstOrDefault())
                                {
                                    <div class="news-feed-col">
                                        <a href="#">

                                            <div class="right-news-desc2">
                                                <p>@(news.NewsDiscription.Length > 60 ? (news.NewsDiscription.Substring(0, 60)) : news.NewsDiscription)</p>
                                                <p><i class="fa fa-clock-o"></i>@news.CreatedTime.ToShortDateString()</p>
                                            </div>
                                        </a>
                                    </div>

                                }

                            </div>


                            <div class="side-news-feed mt-4">

                                <h3><i class="fa fa-thumbs-up"></i> Top Deals</h3>

                                @foreach (var item in Model.Select(x => x.NewsDetailsViewModel.DealList).FirstOrDefault())
                                {
                                    <div class="news-feed-col">
                                        <a href="#">
                                            @if (item.DealsImg != string.Empty)
                                            {
                                                <div class="left-news-pic"><img src="/images/@item.DealsImg" alt=""></div>
                                            }
                                            <div class="right-news-desc">
                                                <p>@item.DealsDiscription</p>
                                                <p><i class="fa fa-clock-o"></i>@item.CreatedTime.Value.ToShortDateString()</p>
                                            </div>
                                        </a>
                                    </div>
                                }

                            </div>


                        </aside>

                    </div>

                    <div class="col-md-12">
                        <div style="height:30px"></div>
                        <div class="common-desc">
                            <h4 style="border-bottom: 1px solid #ccc">Description</h4>
                            <p>

                                @foreach (string Discription in (Model.Select(x => x.Discription).FirstOrDefault()))
                                {
                                    @Discription
                                }
                            </p>
                            @*<p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.</p>*@
                        </div>
                        <div style="height:30px"></div>
                        <div class="custom-table">

                            <table class="table table-hover table-bordered">
                                <thead>
                                    <tr class="table-primary">
                                        <th></th>
                                        @foreach (string column in (Model.FirstOrDefault().LstData.Select(x => x.DimensionOne).ToList()))// Model.Select(x => x.StackedDimensionOne).ToList())
                                        {

                                            <th>@column</th>
                                        }

                                        @*<th>2010</th>
                                            <th>2011</th>
                                            <th>2012</th>
                                            <th>2013</th>
                                            <th>2014</th>
                                            <th>2015</th>
                                            <th>2016</th>*@
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (string count in Model.Select(x => x.StackedDimensionOne).ToList())
                                    {
                                        <tr>
                                            @foreach (var data in Model.Where(x => x.StackedDimensionOne == count).ToList())

                                            {
                                                <th>@count</th>
                                                //for(int aa = 0; aa < Model.Select(x => x.StackedDimensionOne).ToList().Count(); aa++)
                                                //{

                                                foreach (var value in data.LstData.Select(x => x.Quantity).ToList())
                                                {
                                                    <th>@value</th>
                                                }
                                                //  }
                                            }
                                        </tr>
                                    }
                                    @*<tr>
                                            <td>1111</td>
                                            <td>2222</td>
                                            <td>3333</td>
                                            <td>4444</td>
                                            <td>5555</td>
                                            <td>6666</td>
                                            <td>7777</td>
                                        </tr>
                                        <tr>
                                            <td>1111</td>
                                            <td>2222</td>
                                            <td>3333</td>
                                            <td>4444</td>
                                            <td>5555</td>
                                            <td>6666</td>
                                            <td>7777</td>
                                        </tr>
                                        <tr>
                                            <td>1111</td>
                                            <td>2222</td>
                                            <td>3333</td>
                                            <td>4444</td>
                                            <td>5555</td>
                                            <td>6666</td>
                                            <td>7777</td>
                                        </tr>*@
                                </tbody>
                            </table>

                        </div>


                    </div>

                </div>

            </div>
        </div>
    </div>

    <!-- The Modal -->
    <div class="modal" id="myModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="login-pic">
                                <div class="freeSub">
                                    <h2>Get Chemical Pricing in few-clicks.</h2>
                                    <a href="@Url.Action("FreeTrail", "ChemAnalyst")" class="btn btn-yellow">Start your Free Trail today.</a>
                                    <a href="@Url.Action("FreeTrail", "ChemAnalyst")" class="text-center">Click here to subscribe free trial to enjoy our benefits!</a>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <footer>
        <div class="container-fluid">

            <div class="footer-bottom">

                <div class="row">

                    <div class="col-lg-4">


                        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s.</p>

                        <div class="footer-social">
                            <a href="#"><i class="fa fa-facebook"></i></a>
                            <a href="#"><i class="fa fa-twitter"></i></a>
                            <a href="#"><i class="fa fa-instagram" aria-hidden="true"></i></a>
                            <a href="#"><i class="fa fa-linkedin"></i></a>
                        </div>


                    </div>

                    <div class="col-lg-2">
                        <h3>Useful links</h3>
                        <div class="foot-links">
                            <p><a href="#">About Us</a></p>
                            <p><a href="#">Privacy Policy</a></p>
                            <p><a href="#">FAQs</a></p>
                        </div>
                    </div>

                    <div class="col-lg-2">
                        <h3>Our Services</h3>
                        <div class="foot-links">
                            <p><a href="#">About Us</a></p>
                            <p><a href="#">Privacy Policy</a></p>
                            <p><a href="#">FAQs</a></p>
                        </div>
                    </div>

                    <div class="col-lg-3">
                        <h3>Recent News & Deals</h3>
                        <div class="foot-links">
                            <p>
                                <a href="#">
                                    Test with Nursing Implications
                                    <br>August 8, 2018
                                </a>
                            </p>
                            <p>
                                <a href="#">
                                    Test with Nursing Implications
                                    <br>August 8, 2018
                                </a>
                            </p>

                        </div>
                    </div>

                </div>


                <div class="copyright text-center">
                    <p>Copyright 2019. Chem Analyst. All Rights Reservered. </p>

                </div>

            </div>

        </div>

    </footer>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.0/jquery.min.js"></script>
    @*<script src="//ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js"></script>*@
    <script src="../js/popper.min.js"></script>
    <script src="../js/bootstrap.min.js"></script>
    <script src="../js/bootstrap-multiselect.js"></script>

    <script src="../js/owl.carousel.js"></script>
    <script src="../js/wow.min.js"></script>
    <script src="../js/honey-custom.js"></script>
    <script src="../js/Chart.min.js"></script>
    <script src="../js/utils.js"></script>
    <script>
        $(document).ready(function () {
        });

    </script>
    <script>
    function SubmitForm() {
        debugger;
            var Product = @Html.Raw(Product);
            var ChartType = @Html.Raw(ChartType);
            var range = @Html.Raw(range);
        var Category = @Html.Raw(Category);


            //  $('#ddlProduct').val();
            if ( $('#ddlProduct').val()!=Product && $('#ddlProduct').val()!='')// Calling validation function
            {
                $('#myModal').modal({backdrop: 'static', keyboard: false});
                event.preventDefault();
            }

    }


    function ResetForm()
    {
        var Product = @Html.Raw(Product);
            var ChartType = @Html.Raw(ChartType);
            var range = @Html.Raw(range);
        var Category = @Html.Raw(Category);

        $('#ClearValue').val('ClearMaxValue');

            //  $('#ddlProduct').val();
            if ( $('#ddlProduct').val()!=Product && $('#ddlProduct').val()!='')// Calling validation function
            {
                $('#myModal').modal({backdrop: 'static', keyboard: false});
                event.preventDefault();
            }

    }
        $("body").on("change", "#category", function () {
            var CatId=$(category).find("option:selected").val();

            var ddlCustomers = $("#ddlProduct");
            //  var ddlCompare = $("#example-getting-started");
            // example-getting-started
            ddlCustomers.empty().append('<option selected="selected" value="" disabled = "disabled">Loading.....</option>');
            $.ajax({
                type: "POST",
                url: "../ChemicalPricing/GetProductName",
                data: "{ CatId:"+ CatId +"}" ,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                success: function (response) {
                    ddlCustomers.empty().append('<option selected="selected" value=""> select Product</option>');
                    //ddlCompare.empty().append('<option selected="selected" value="0"> select Product</option>');

                    $.each(response, function () {
                        ddlCustomers.append($("<option></option>").val(this['Value']).html(this['Text']));
                        // ddlCompare.append($("<option  ></option>").val(this['Value']).html(this['Text']));

                    });
                    $("#example-getting-started").multiselect();
                    // alert("category call");
                },
                failure: function (response) {
                   // alert(response.responseText);
                },
                error: function (response) {
                   // alert(response.responseText);
                }
            });
        });
    function Drowchart(id, d) {
            var XLabels = @Html.Raw(XLabels);
            var YValues = @Html.Raw(YValues);
            var label = @Html.Raw(label2);
        debugger
        var firstValue = label[0];
        var lasttValue = label[label.length-1];
        $("#myRange").attr("min", @fValue);
        $("#myRange").attr("max", @lValue);

        var selected= '@Html.Raw(SelectedValues.ToString())';
        if (selected != "Empty") {
            if ('@fValue'==selected) {
                $("#myRange").attr("value", firstValue);
            }
            else {
                $("#myRange").attr("value", '@SelectedValues');
            }
        }
        else {
            $("#myRange").attr("value", firstValue);
        }



        var output = document.getElementById("demo");
        output.innerHTML = firstValue;

            var aux = 0;
            var barChartData = {
                labels: @Html.Raw(label2),
                datasets: []
            }
            XLabels.forEach(function(a, i) {
                var data = [];
                YValues.forEach(function(a, i) {
                    data.push(a[aux]);
                });
                barChartData.datasets.push({
                    label: XLabels[aux],
                    fill: false,
                    backgroundColor: random_rgba(),
                    borderColor: Bcolor,
                    data: data
                });
                aux++;
            });

            var  options= {
                responsive: true,
                title: {
                    display: true,
                    text: 'Chemical Analysis Chart'
                },
                tooltips: {
                    mode: 'index',
                    intersect: false,
                },

                scales: {
                    xAxes: [{
                        display: true,
                        scaleLabel: {
                            display: false,
                            labelString: 'Month'
                        }
                    }],
                    yAxes: [{
                        display: true,
                        scaleLabel: {
                            display: false,
                            labelString: 'Value'
                        },
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        }
                    }]
                }
            }
            var Bcolor;
            function random_rgba() {

                var letters = '0123456789ABCDEF';
                var color = '#';
                for (var i = 0; i < 6; i++) {
                    color += letters[Math.floor(Math.random() * 16)];
                }
                Bcolor=color;
                return color;
                //var o = Math.round,
                //    r = Math.random,
                //    s = 100;
                //return 'rgba(' + o(r() * s) + ',' + o(r() * s) + ',' + o(r() * s) + ',' + r().toFixed(1) + ')';
        }
        debugger
            var ctx = document.getElementById(id).getContext('2d');
            window.myLine =  new Chart(ctx, {      options: options,
                data: barChartData,
                type: d
            });
            // window.myLine = new Chart(ctx, config);
        }


        window.onload = function () {
            var Product = @Html.Raw(Product);
            var ChartType = @Html.Raw(ChartType);
            var range = @Html.Raw(range);
            var Category = @Html.Raw(Category);

            $('#category').val(Category).trigger('change');;

            $('#ddlProduct').val(Product);
            $('#ddlChart').val(ChartType);
            $('#ddlRange').val(range);



            Drowchart('canvas', ChartType);
            //Drowchart('canvas2','bar');
        var selected = $("#ddlRange option:selected").text();
        debugger
        if (selected == "Yearly") {
           $("#slidecontainer1").show()
        }
        else
        {
            $("#slidecontainer1").hide()
        }
        };


        document.getElementById('drowchart').addEventListener('change', function () {
            var d = document.getElementById('drowchart').value;
            //alert(d);
            debugger
            Drowchart('canvas', d);
        });



        document.getElementById('randomizeData').addEventListener('click', function () {
            config.data.datasets.forEach(function (dataset) {
                dataset.data = dataset.data.map(function () {
                    return randomScalingFactor();
                });

            });

            window.myLine.update();
        });

        var colorNames = Object.keys(window.chartColors);
    document.getElementById('addDataset').addEventListener('click', function () {

            var colorName = colorNames[config.data.datasets.length % colorNames.length];
            var newColor = window.chartColors[colorName];
            var newDataset = {
                label: 'Dataset ' + config.data.datasets.length,
                backgroundColor: newColor,
                borderColor: newColor,
                data: [],
                fill: false
            };

            for (var index = 0; index < config.data.labels.length; ++index) {
                newDataset.data.push(randomScalingFactor());
            }

            config.data.datasets.push(newDataset);
            window.myLine.update();
        });

        document.getElementById('addData').addEventListener('click', function () {
            if (config.data.datasets.length > 0) {
                var month = MONTHS[config.data.labels.length % MONTHS.length];
                config.data.labels.push(month);

                config.data.datasets.forEach(function (dataset) {
                    dataset.data.push(randomScalingFactor());
                });

                window.myLine.update();
            }
        });

        document.getElementById('removeDataset').addEventListener('click', function () {
            config.data.datasets.splice(0, 1);
            window.myLine.update();
        });

        document.getElementById('removeData').addEventListener('click', function () {
            config.data.labels.splice(-1, 1); // remove the label first

            config.data.datasets.forEach(function (dataset) {
                dataset.data.pop();
            });

            window.myLine.update();
        });




    $(document).ready(function () {

        //if("#ddlRange option:selected").text()=="Yearly") {
        //    $("#slidecontainer").show();
        //}



            $("#ShowChart").validate({
                debug: true,
                rules: {
                    ddlProduct: {
                        required: function () {
                            if ($("#ddlProduct option[value='0']")) {
                                return true;
                            } else {
                                return false;
                            }
                        }
                    },
                    ddlChart: {
                        required: function () {
                            if ($("#ddlChart option[value='0']")) {
                                return true;
                            } else {
                                return false;
                            }
                        }
                    }, ddlRange: {
                        required: function () {
                            if ($("#ddlRange option[value='0']")) {
                                return true;
                            } else {
                                return false;
                            }
                        }
                    }
                },
                messages: {
                    ddlRange: "range Required",
                },
            });


        })

    </script>


    <script>
        var slider = document.getElementById("myRange");
        var output = document.getElementById("demo");
        output.innerHTML = slider.value;


        document.getElementById("myRange").onmousedown = function () { mouseDown() };
        document.getElementById("myRange").onmouseup = function () { mouseUp() };

        function mouseDown() {
            //document.getElementById("demo").innerHTML = "The mouse button is held down.";
        }

        function mouseUp() {
            output.innerHTML = slider.value;
            //alert(slider.value)

            $("#MinValue").val($("#myRange").attr("min"));
            $("#MaxValue").val(slider.value);

            $(".mt27").trigger("click");

        }
    </script>

    @*<script>
            debugger
            var slider = document.getElementById("myRange");
            var output = document.getElementById("demo");
            output.innerHTML = slider.value;
        alert(output.innerHTML);

            document.getElementById("myRange").onmousedown = function () {
                debugger
                mouseDown()
            };
            document.getElementById("myRange").onmouseup = function () {
                debugger
                mouseUp()
            };

        function mouseDown() {
            debugger
                 var Product = $("#ddlProduct").find("option:selected").val();
                var ChartType = $("#ddlChart").find("option:selected").val();
                var Range = $("#ddlRange").find("option:selected").val();
            debugger

            $("#MaxValue").val($("#myRange").attr("max"));
            $("#MinValue").val($("#myRange").attr("min"));

             $(".mt27").trigger( "click" );
               // FilterChartData(Product, ChartType, Range,null, false);
                //document.getElementById("demo").innerHTML = "The mouse button is held down.";
            }

            function mouseUp() {
                //output.innerHTML = slider.value;
                alert(document.getElementById("myRange").value);
                output.innerHTML = document.getElementById("myRange").value;



                var Product = $("#ddlProduct").find("option:selected").val();
                var ChartType = $("#ddlChart").find("option:selected").val();
                var Range = $("#ddlRange").find("option:selected").val();
                debugger

                $("#MaxValue").val($("#myRange").attr("max"));
                $("#MinValue").val($("#myRange").attr("min"));

                $(".mt27").trigger( "click" );
                ///FilterChartData(Product, ChartType, Range,null, false);

                // need to send request to filter chart data
            }



        function FilterChartData(product, ChartType, Range, CompareProject, Customer) {
                debugger
                $.ajax({
                    type: "POST",
                    url: "../ChemicalPricing/ChecmPriceYearlyChartJson",
                    data: "{'product':'"+product+"', 'ChartType':'"+ChartType+"', 'Range':'"+Range+"', 'CompareProject':'nullData', 'Customer':'"+Customer+"'}",
                    //data: { product: product, ChartType: ChartType, Range: Range,CompareProject:null, Customer: Customer },
                    contentType: "application/json; charset=utf-8",
                    dataType: "text",
                    async: false,
                    success: function (response) {
                        alert("hiii")
                        debugger
                        Drowchart1("canvas","line");
                        //ddlCustomers.empty().append('<option selected="selected" value=""> select Product</option>');
                        //$.each(response, function () {
                        //    ddlCustomers.append($("<option></option>").val(this['Value']).html(this['Text']));
                        //});
                        //$("#example-getting-started").multiselect();
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });
                }




        </script>*@





</html>